# version: 2.1

# jobs:
#   print_hello:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#        - checkout
#        - run:
#            name: "Print Hello"
#            command: "echo Hello"
#   print_world:
#      docker:
#       - image: circleci/node:13.8.0
#      steps:
#        - checkout
#        - run:
#             name: "Say World"
#             command: "echo World"
#   print_name:
#      docker:
#       - image: circleci/node:13.8.0
#      steps:
#        - checkout
#        - run:
#             name: "Print Name"
#             command: |
#               echo  $name
    

# workflows:
#   say-hello-workflow:
#     jobs:
#       - print_hello
#       - print_world:
#           requires:
#             - print_hello
#       - print_name


# version: 2.1

# jobs:
#   save_hello_world_output:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "hello world" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - output.txt

#   print_output_file:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: cat ~/output.txt

# workflows:
#   my_workflow:
#     jobs:
#       - save_hello_world_output
#       - print_output_file:
#           requires:
#             - save_hello_world_output



# steps:
#   - run:
#       name: Testing application
#       command: make test
#       shell: /bin/bash
#       working_directory: ~/my-app
#       no_output_timeout: 30m
#       environment:
#         FOO: bar

#   - run: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts

#   - run: |
#       sudo -u root createuser -h localhost --superuser ubuntu &&
#       sudo createdb -h localhost test_db

#   - run:
#       name: Upload Failed Tests
#       command: curl --data fail_tests.log http://example.com/error_logs
#       when: on_fail

# version: 2.1


# commands:
#   print_pipeline_id:
#      steps:
#       - run: echo ${CIRCLE_WORKFLOW_ID}

# jobs:
#   my_job:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - print_pipeline_id

# workflows:
#   my_worfflow_job:
#     jobs:
#       - my_job


version: 2.1



jobs:
  my_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail

workflows:
  my_worfflow_job:
    jobs:
      - my_job


